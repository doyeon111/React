* App.jsx
    - App 컴포넌트 최상위 컴포넌트고,
    - 나머지 컴포넌트들은 App 컴포넌트의 자식 컴포넌트로 존재해야 한다.
    - 모든 리액트 컴포넌트들은 App 컴포넌트를 최상위 조상으로 갖는 계층 구조를 가지게 됨.
    - App 컴포넌트 = root 컴포넌트
    
=====================================================================================

* JSX란?
    - JavaScript Extensions 
    - 확장된 자바스크립트의 문법을 말함
    - html로 렌더링 하여 사용 가능
ex)
    function Footer() { <- javaScript
        return (        <- javaScript
            <footer>                    <- HTML
                <h1>footer</h1>         <- HTML
            </footer>                   <- HTML
        )               <- javaScript
    }                   <- javaScript


=====================================================================================

* Props란?
    - 부모 컴포넌트에서 자식 컴포넌트로 값을 전달

=====================================================================================

* Event Handling
    - 웹 내부에서 발생하는 사용자의 행동
    - ex) 버튼 클릭, 메세지 입력, 스크롤 등등

=====================================================================================

* State란? (상태)
    - State는 변화할 수 있다.
    - 현재 가지고 있는 형태나 모양을 정의
    - 변화할 수 있는 동적인 값

    * 리 렌더(Re-Render) or 리 렌더링(Re-Rendering)
        - 컴포넌트가 다시 렌더링 되는 상황

    * 리액트가 리렌더링 되는 상황 3가지
        1. 자신이 관리하는 state값이 변경 되었을 때 리렌더링 됨.
        2. 자신이 제공받는 props의 값이 변경 되었을 때
        3. 부모컴포넌트가 리렌더링 되면 자식컴포넌트도 리렌더링 됨.

=====================================================================================

* useRef란?
    - 새로운 Reference 객체를 생성하는 기능
    - useState와 같이 컴포넌트 내부의 변수로 활용 가능
    - 어떤 경우에도 리렌더링을 유발하지 않음

=====================================================================================

* React Hooks
    - 클래스 컴포넌트의 기능을 함수 컴포넌트에서도 이용할 수 있도록 함
    